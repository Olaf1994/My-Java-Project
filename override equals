package day725;
/**
 * 定义一个类Person，如下: ◦包含私有属性 name age salary
 * 定义构造方法，以及属性get,set方法
 * 重写toString方法，返回字符串格式如:"张三,25,5000"
 * 重写equals方法，要求名字相同就认为内容一致
 * @author 何志仁
 *
 */
public class Demo04 {
	public static void main(String[] args) {
		Person p1 = new Person("张三" , 18 , 2000) ;
		Person p2 = new Person("张三" , 20 , 4000) ;
		Person p3 = new Person("李四" , 18 , 2000) ;
		System.out.println(p1) ;
		System.out.println(p2) ;
		System.out.println(p3) ;
		System.out.println(p1 == p2) ;          //false
		System.out.println(p1 == p3) ;          //false
		System.out.println(p2 == p3) ; 			//false
		System.out.println(p1.equals(p2)) ;     //true
		System.out.println(p1.equals(p3)) ;     //false
		System.out.println(p2.equals(p3)) ;     //false
		
	}
}

class Person{
	//私有的属性，公有的方法
	private String name ;
	private int age ;
	private double salary ;
	//添加加无参构造函数
	public Person(){} ;
	public Person(String name , int age , double salary){
		this.name = name ;
		this.age = age ;
		this.salary = salary ;
	}
	public void setName(String name){
		this.name = name ;
	}
	public void setAge(int age){
		this.age = age ;
	}
	public void setSalary(double salary){
		this.salary = salary ;
	}
	public String getName(){
		return this.name ;
	}
	public int getAge(){
		return this.age ;
	}
	public double getSalary(){
		return this.salary ;
	}
	
    //重写toString()方法
	public String toString(){
		return "姓名:" + this.name + ",年龄:" + this.age + ",工资:" + this.salary ;
	}
	
	//重写equals方法
	public boolean equals(Object obj){
		//1.先判断对象是否为空
		if(obj == null){
			return false ;
		}
		//2.判断对象
		if(this == obj){
			return true ;
		}
		if(obj instanceof Person){
			Person p = (Person)obj ;
			if(this.name != null){
				return this.name.equals(p.name) ;      //name为String（引用）类型，初始化条件不合适，可能会出现空指针异常
			}else{
				return false ;
			}
		}
		return false ;
	}
}
